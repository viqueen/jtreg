#
# Copyright (c) 1997, 2024, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

#----------------------------------------------------------------------

# unit test for format support in TestStats.java
$(BUILDTESTDIR)/StatsTest.ok: \
	    $(TESTDIR)/statsTests/StatsTest.java \
	    $(JTREG_IMAGEDIR)/lib/javatest.jar \
	    $(JTREG_IMAGEDIR)/lib/jtreg.jar
	$(RM) $(@:%.ok=%) ; $(MKDIR) $(@:%.ok=%)
	$(MKDIR) $(@:%.ok=%)/classes
	$(JDKJAVAC) -d $(@:%.ok=%)/classes -cp $(JTREG_IMAGEDIR)/lib/jtreg.jar \
		-Xlint -Werror \
		$(TESTDIR)/statsTests/StatsTest.java
	$(JDKJAVA) -cp $(@:%.ok=%)/classes:$(JTREG_IMAGEDIR)/lib/jtreg.jar \
	    com.sun.javatest.regtest.report.StatsTest
	echo "test passed at `date`" > $@

ifneq ($(OS_NAME), windows)
TESTS.jtreg += $(BUILDTESTDIR)/StatsTest.ok
endif

STATS1_EXPECT_RUN := $(shell if [ ${JAVA_SPECIFICATION_VERSION} -lt 18 ]; then echo 45; else echo 33; fi)
STATS1_EXPECT_FAIL := $(shell if [ ${JAVA_SPECIFICATION_VERSION} -lt 18 ]; then echo 32; else echo 22; fi)
# system test for format support in TestStats.java: see -Djtreg.stats.format
$(BUILDTESTDIR)/StatsTxt.1.ok: \
	    $(JTREG_IMAGEDIR)/lib/javatest.jar \
	    $(JTREG_IMAGEDIR)/lib/jtreg.jar
	$(RM) $(@:%.ok=%) ; $(MKDIR) $(@:%.ok=%)
	$(JDKJAVA) \
	    -Djtreg.stats.format="TEST-STATS: StatsTxt run=%r failed=%F excluded=%x" \
	    -jar $(JTREG_IMAGEDIR)/lib/jtreg.jar \
		-jdk:$(JDKHOME) \
		-agentvm \
		-w $(@:%.ok=%/work) \
		-r $(@:%.ok=%/report) \
		$(TESTDIR)/share/basic/main   \
			> $(@:%.ok=%/jt.log) 2>&1  || \
	    true "non-zero exit code from JavaTest intentionally ignored"
	$(GREP) -E -s '^TEST-STATS: StatsTxt run=$(STATS1_EXPECT_RUN) failed=$(STATS1_EXPECT_FAIL) excluded=0\s?$$' \
		$(@:%.ok=%/jt.log)  > /dev/null
	$(GREP) -E -s '^TEST-STATS: StatsTxt run=$(STATS1_EXPECT_RUN) failed=$(STATS1_EXPECT_FAIL) excluded=0\s?$$' \
		$(@:%.ok=%/report/text/stats.txt)  > /dev/null
	echo "test passed at `date`" > $@

TESTS.jtreg += $(BUILDTESTDIR)/StatsTxt.1.ok

STATS2_EXPECT_PASS := $(shell if [ ${JAVA_SPECIFICATION_VERSION} -lt 18 ]; then echo 13; else echo 11; fi)
STATS2_EXPECT_FAIL := $(shell if [ ${JAVA_SPECIFICATION_VERSION} -lt 18 ]; then echo 32; else echo 22; fi)
# system test for format support in TestStats.java: see -Djtreg.stats.format
$(BUILDTESTDIR)/StatsTxt.2.ok: \
	    $(JTREG_IMAGEDIR)/lib/javatest.jar \
	    $(JTREG_IMAGEDIR)/lib/jtreg.jar
	$(RM) $(@:%.ok=%) ; $(MKDIR) $(@:%.ok=%)
	$(JDKJAVA) \
	    -Djtreg.stats.format="TEST-STATS: StatsTxt passed=%p failed=%F ignored=%i" \
	    -jar $(JTREG_IMAGEDIR)/lib/jtreg.jar \
		-jdk:$(JDKHOME) \
		-agentvm \
		-w $(@:%.ok=%/work) \
		-r $(@:%.ok=%/report) \
		-ignore:quiet \
		$(TESTDIR)/share/basic/main   \
		$(TESTDIR)/share/basic/ignore   \
			> $(@:%.ok=%/jt.log) 2>&1  || \
	    true "non-zero exit code from JavaTest intentionally ignored"
	$(GREP) -E -s '^TEST-STATS: StatsTxt passed=$(STATS2_EXPECT_PASS) failed=$(STATS2_EXPECT_FAIL) ignored=2\s?$$' \
		$(@:%.ok=%/jt.log)  > /dev/null
	$(GREP) -E -s '^TEST-STATS: StatsTxt passed=$(STATS2_EXPECT_PASS) failed=$(STATS2_EXPECT_FAIL) ignored=2\s?$$' \
		$(@:%.ok=%/report/text/stats.txt)  > /dev/null
	echo "test passed at `date`" > $@
		    			
TESTS.jtreg += $(BUILDTESTDIR)/StatsTxt.2.ok

STATS3_EXPECT_PASS := $(shell if [ ${JAVA_SPECIFICATION_VERSION} -lt 18 ]; then echo 12; else echo 10; fi)
STATS3_EXPECT_FAIL := $(shell if [ ${JAVA_SPECIFICATION_VERSION} -lt 18 ]; then echo 32; else echo 22; fi)
# system test for format support in TestStats.java: see -Djtreg.stats.format
# (includes skipped)
$(BUILDTESTDIR)/StatsTxt.3.ok: \
	    $(JTREG_IMAGEDIR)/lib/javatest.jar \
	    $(JTREG_IMAGEDIR)/lib/jtreg.jar
	$(RM) $(@:%.ok=%) ; $(MKDIR) $(@:%.ok=%)
	$(JDKJAVA) \
	    -Djtreg.stats.format="TEST-STATS: StatsTxt passed=%P failed=%F ignored=%i skipped=%s" \
	    -jar $(JTREG_IMAGEDIR)/lib/jtreg.jar \
		-jdk:$(JDKHOME) \
		-agentvm \
		-w $(@:%.ok=%/work) \
		-r $(@:%.ok=%/report) \
		-ignore:quiet \
		$(TESTDIR)/share/basic/main   \
		$(TESTDIR)/share/basic/ignore   \
			> $(@:%.ok=%/jt.log) 2>&1  || \
	    true "non-zero exit code from JavaTest intentionally ignored"
	$(GREP) -E -s '^TEST-STATS: StatsTxt passed=$(STATS3_EXPECT_PASS) failed=$(STATS3_EXPECT_FAIL) ignored=2 skipped=1\s?$$' \
		$(@:%.ok=%/jt.log)  > /dev/null
	$(GREP) -E -s '^TEST-STATS: StatsTxt passed=$(STATS3_EXPECT_PASS) failed=$(STATS3_EXPECT_FAIL) ignored=2 skipped=1\s?$$' \
		$(@:%.ok=%/report/text/stats.txt)  > /dev/null
	echo "test passed at `date`" > $@

TESTS.jtreg += $(BUILDTESTDIR)/StatsTxt.3.ok

STATS4_EXPECT_PASS := $(shell if [ ${JAVA_SPECIFICATION_VERSION} -lt 18 ]; then echo 13; else echo 11; fi)
STATS4_EXPECT_FAIL := $(shell if [ ${JAVA_SPECIFICATION_VERSION} -lt 18 ]; then echo 19; else echo 9; fi)
STATS4_EXPECT_ERROR := $(shell if [ ${JAVA_SPECIFICATION_VERSION} -lt 18 ]; then echo 13; else echo 13; fi)
# system test for default format support in TestStats.java: no -Djtreg.stats.format
# (includes skipped)
$(BUILDTESTDIR)/StatsTxt.4.ok: \
	    $(JTREG_IMAGEDIR)/lib/javatest.jar \
	    $(JTREG_IMAGEDIR)/lib/jtreg.jar
	$(RM) $(@:%.ok=%) ; $(MKDIR) $(@:%.ok=%)
	$(JDKJAVA) \
	    -jar $(JTREG_IMAGEDIR)/lib/jtreg.jar \
		-jdk:$(JDKHOME) \
		-agentvm \
		-w $(@:%.ok=%/work) \
		-r $(@:%.ok=%/report) \
		-ignore:quiet \
		$(TESTDIR)/share/basic/main   \
		$(TESTDIR)/share/basic/ignore   \
			> $(@:%.ok=%/jt.log) 2>&1  || \
	    true "non-zero exit code from JavaTest intentionally ignored"
	$(GREP) -E -s '^Test results: passed: $(STATS4_EXPECT_PASS); failed: $(STATS4_EXPECT_FAIL); error: $(STATS4_EXPECT_ERROR); skipped: 1; did not match keywords: 2.*?$$' \
		$(@:%.ok=%/jt.log)  > /dev/null
	$(GREP) -E -s '^Test results: passed: $(STATS4_EXPECT_PASS); failed: $(STATS4_EXPECT_FAIL); error: $(STATS4_EXPECT_ERROR); skipped: 1; did not match keywords: 2.*?$$' \
		$(@:%.ok=%/report/text/stats.txt)  > /dev/null
	echo "test passed at `date`" > $@

TESTS.jtreg += $(BUILDTESTDIR)/StatsTxt.4.ok

